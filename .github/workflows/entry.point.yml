name: Run Entry Point

on:
  workflow_dispatch:
    inputs:
      test_tag:
        description: "Test scope to run"
        required: true
        type: choice
        default: "@smoke"
        options:
          - "@smoke"
          - "@regression"

      max_parallel:
        description: "Max parallel tests to run"
        required: true
        type: string
        default: "5"

  repository_dispatch:
    types:
      - RunMonolithTests/*

env:
  MAX_PARALLEL: ${{ inputs.max_parallel}}
  TEST_TAG: ${{ inputs.test_tag }}

jobs:
  setup:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Find test rail ids
        if: ${{ github.event_name == 'workflow_dispatch'}}
        id: tr_id
        shell: bash
        run: |
          testList=$(grep -r '<U.*>' ./tests/ | grep -E '${{ env.TEST_TAG }}' | sed 's/.*<//; s/>.*//' | tr '\n' '|' | sed 's/.$//')
          
          max=${{ env.MAX_PARALLEL }}

          IFS='|' read -r -a elements <<< "$testList"
          
          next="${elements[0]}"
          
          for ((i=1; i<max; i++)); do
          next="$next|${elements[i]}"
          done
          
          remaining="${elements[max]}"
          
          for ((i=max+1; i<${#elements[@]}; i++)); do
          remaining="$remaining|${elements[i]}"
          done
          
          echo "NEXT_TESTS=$next" >> $GITHUB_ENV
          echo "LEFT_TESTS=$remaining" >> $GITHUB_ENV

      - name: Event Information
        if: ${{ github.event_name == 'repository_dispatch'}}
        run: |
          echo "Next tests: ${{ github.event.client_payload.nextTests }}, Left tests: ${{ github.event.client_payload.leftTests }}, Need to stop: ${{ github.event.client_payload.stop }}"
          echo "NEXT_TESTS=${{ github.event.client_payload.nextTests }}" >> $GITHUB_ENV
          echo "LEFT_TESTS=${{ github.event.client_payload.leftTests }}" >> $GITHUB_ENV
          echo "TEST_TAG=${{ github.event.client_payload.testTag }}" >> $GITHUB_ENV
          echo "MAX_PARALLEL=${{ github.event.client_payload.maxParallel }}" >> $GITHUB_ENV
          echo "STOP=${{ github.event.client_payload.stop }}" >> $GITHUB_ENV

      - name: Print
        run: env | sort

      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        if: ${{ env.NEXT_TESTS }}
        run: |
          npm ci
          npx playwright install chromium

          TEST_TAG="${{ env.TEST_TAG }}" \
          MAX_PARALLEL="${{ env.MAX_PARALLEL }}" \
          NEXT_TESTS="${{ env.NEXT_TESTS }}" \
          LEFT_TESTS="${{ env.LEFT_TESTS }}" \
          REPO_OWNER=${{ github.repository_owner }} \
          REPO_NAME=${{ github.repository }} \
          GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} \
          npx playwright test -g "${{ env.NEXT_TESTS }}"
