name: Run Entry Point

on:
  workflow_dispatch:
    inputs:
      environment_name:
        description: "Select Environment"
        required: true
        type: choice
        default: "integration"
        options:
          - "staging"
          - "integration"
      test_tag:
        description: "Test tags to run"
        required: true
        type: choice
        default: "@smoke"
        options:
          - "@smoke"
          - "@monolith-nightly"
      enable_dispatch:
        description: "Enable repository dispatch?"
        required: true
        type: boolean
        default: true
      max_parallel:
        description: "Max parallel"
        required: true
        type: string
        default: '15'
      min_pass_rate:
        description: "Min pass rate to deploy"
        required: true
        type: number
        default: 80
      event_type:
        description: "Event type to dispatch"
        required: true
        type: choice
        default: "RunMonolithTests"
        options:
          - "PromoteToStaging"
          - "RunMonolithTests"
      service_name:
        description: "Service name"
        required: false
        type: string
      service_version:
        description: "Service version"
        required: false
        type: string

  repository_dispatch:
    types:
      - RunMonolithTests/*

permissions: write-all

env:
  ENABLE_DISPATCH: ${{ inputs.event_type || false }}
  TEST_TAG: ${{ inputs.test_tag || '@monolith' }}
  MAX_PARALLEL: ${{ inputs.max_parallel || 15 }}
  ENVIRONMENT_NAME: ${{ inputs.environment_name || 'integration' }}
  MIN_PASS_RATE: ${{ inputs.min_pass_rate || 50 }}
  EVENT_TYPE:  ${{ inputs.event_type || 'RunMonolithTests' }}
  SERVICE_NAME:  ${{ inputs.service_name || 'e2e' }}
  SERVICE_VERSION: ${{ inputs.service_version || 'e2e' }}

jobs:
  setup:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Find test rail ids
        if: ${{ github.event_name == 'workflow_dispatch'}}
        id: tr_id
        shell: bash
        run: |
          max=${{ env.MAX_PARALLEL }}
          testList=$(grep -r '<U.*>' ./tests/ | grep -E "${{ env.TEST_TAG }}" | sed 's/.*<//; s/>.*//' | tr '\n' '|' | sed 's/.$//')

          IFS='|' read -r -a elements <<< "$testList"
          
          next="${elements[0]}"
          
          for ((i=1; i<max; i++)); do
            next="$next|${elements[i]}"
          done
          
          remaining="${elements[max]}"
          
          for ((i=max+1; i<${#elements[@]}; i++)); do
            remaining="$remaining|${elements[i]}"
          done
          
          echo "NEXT_TESTS=$next" >> $GITHUB_ENV
          echo "LEFT_TESTS=$remaining" >> $GITHUB_ENV

      - name: Event Information
        if: ${{ github.event_name == 'repository_dispatch'}}
        run: |
          echo "Next tests: ${{ github.event.client_payload.nextTests }}, Left tests: ${{ github.event.client_payload.leftTests }}, Need to stop: ${{ github.event.client_payload.stop }}"
          echo "NEXT_TESTS=${{ github.event.client_payload.nextTests }}" >> $GITHUB_ENV
          echo "LEFT_TESTS=${{ github.event.client_payload.leftTests }}" >> $GITHUB_ENV
          echo "TEST_TAG=${{ github.event.client_payload.testTag }}" >> $GITHUB_ENV
          echo "MAX_PARALLEL=${{ github.event.client_payload.maxParallel }}" >> $GITHUB_ENV
          echo "STOP=${{ github.event.client_payload.stop }}" >> $GITHUB_ENV

      - name: Print
        run: env | sort

      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        if: ${{ env.NEXT_TESTS }}
        run: |
          npm ci
          npx playwright install chromium

          TEST_TAG="${{ env.TEST_TAG }}" \
          MAX_PARALLEL="${{ env.MAX_PARALLEL }}" \
          NEXT_TESTS="${{ env.NEXT_TESTS }}" \
          LEFT_TESTS="${{ env.LEFT_TESTS }}" \
          REPO_OWNER=${{ github.repository_owner }} \
          REPO_NAME=${{ github.repository }} \
          GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} \
          npx playwright test -g "${{ env.NEXT_TESTS }}"
